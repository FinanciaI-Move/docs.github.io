{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Financial Move Tech Development Docs Github: https://github.com/FinanciaI-Move/ Financial Move Links Documenta\u00e7\u00f5es: Github | ~~Cofluence~~ | Drive botvipfinancial | Postman Clouds: Vercel | AWS | Google Cloud Apps: Board Bot | Tickets BOT | Board APP | Clockfy | Slack Projetos Projeto Reposit\u00f3rio Status Bot VIP (normal) e Bot Chefe bot-vip-telegram Ativo Dashboard Bot Chefe dashboard-vip Ativo MySQL com scripts python mysql-database Ativo Redis redis-database Ativo Cryptotraders App cryptotraders-app Ativo Bot VIP (whatsapp) bot-vip-whatsapp Arquivado Room VIP room-vip Arquivado Planilha do milh\u00e3o back-end planilha-do-milhao-backend Ativo Planilha do milh\u00e3o front-end planilha-do-milhao-frontend Ativo Estrutura cloud Vercel Todos os projetos que s\u00e3o Next ser\u00e3o hospedados na Vercel dashboard-vip AWS Nossa principal infraestrutura est\u00e1 na AWS, com inst\u00e2ncias EC2 e RDS, al\u00e9m de usar o S3 para armazenamento, Rekognition para reconhecimento de imagem, etc... EC2 us-east-1 QA1 do cryptotraders-app (a ser migrado p\u00f3s delete app_development) test-server (a ser desativado p\u00f3s valida\u00e7\u00e3o carteira bot vip) EC2 sa-east-1 Produ\u00e7\u00e3o do bot-vip-telegram + redis QA1 do bot-vip-telegram Homologa\u00e7\u00e3o da app_development do bot-vip-telegram (a ser desativado p\u00f3s delete app_development) RDS sa-east-1 Produ\u00e7\u00e3o e QA1 do mysql-database S3 global Bucket de arquivos do cryptotraders-app Modera\u00e7\u00e3o de imagem do cryptotraders-app Google Cloud Aqui s\u00f3 usamos para conectar nossos projetos com o Google Workspace, para sincroniza\u00e7\u00e3o de arquivos em planilhas ou no drive. Apps active-report-383515 Servi\u00e7os externos Em nossos projetos usamos servi\u00e7os externos, ou via API ou via webhook, para fazer integra\u00e7\u00f5es e automatiza\u00e7\u00f5es. API da AWS para utiliza\u00e7\u00e3o dos servi\u00e7os do cryptotraders-app Webhook e API do Telegram para a comunica\u00e7\u00e3o dos bots API e Websocket da Bybit para a comunica\u00e7\u00e3o principal com uma exchange API da Binance como alternativa para quando a Bybit est\u00e1 fora do ar API da Active Campaign para a sincroniza\u00e7\u00e3o dos dados internos com o CRM Webhook e API do Digital Guru para a sincroniza\u00e7\u00e3o dos pagamentos e assinaturas API da OpenAI para a utiliza\u00e7\u00e3o do GPT-3 em nossos projetos GraphQL do Facebook para coleta de dados de ads CoinMarketCap para coleta de dados de mercado Custos gerados pela nossa infraestrutura Servi\u00e7o Custo m\u00e9dio mensal AWS $ 1.500,00 Vercel $ 20,00 x 2 = $40,00 OpenAI $ 5,00 CMC $ 35,00 Sobre cada projeto ativo Para saber em espec\u00edfico sobre cada projeto, acesse o reposit\u00f3rio correspondente e leia o README.md Padr\u00f5es de desenvolvimento Lemas Mantenha a simplicidade (e objetividade) N\u00e3o fa\u00e7a mais do que o necess\u00e1rio, n\u00e3o crie mais do que o necess\u00e1rio, n\u00e3o escreva mais do que o necess\u00e1rio, mas n\u00e3o se esque\u00e7a de fazer o necess\u00e1rio. Nossas entregas tendem a serem simples e objetivas, com valida\u00e7\u00e3o de MVPs e entregas r\u00e1pidas, por\u00e9m, sem esquecer da qualidade. Use o seu c\u00e9rebro Voc\u00ea tem permiss\u00e3o para pensar, e deve pensar. Se algo n\u00e3o te faz sentido ou parece errado, questione, e se for o caso, proponha uma solu\u00e7\u00e3o. Todos os membros do time tem voz e vez, e com certeza tem algo a contribuir. Nada est\u00e1 gravado a ferro e fogo Nossos processos e padr\u00f5es de desenvolvimento s\u00e3o flex\u00edveis, e podem ser alterados a qualquer momento, desde que tenha ganho para o projeto e/ou time, e que seja validado por todos. Aprenda e ensine Ningu\u00e9m sabe tudo, e todos temos algo a aprender e a ensinar. Seja humilde para aprender, e generoso para ensinar. Refer\u00eancias Parte II - A pr\u00e1tica leva \u00e0 perfei\u00e7\u00e3o, do livro \"How to be a better programmer\" de Pete Goodliffe Branchs main Possui o c\u00f3digo em produ\u00e7\u00e3o, jamais efetuar o commit diretamente nela, somente via PR da develop -> main. develop Possui o c\u00f3digo candidato a producao, commits diretos somente para fix de algo j\u00e1 mergeado mas n\u00e3o no deploy, normalmente recebe PRs de branches de features, bugs, etc... qualquer outra branch Possuem o c\u00f3digo de features, bugs, etc... Sempre criar uma branch a partir da develop e efetuar o PR para a mesma. Time de desenvolvimento Full Time William Tavares (head) Lucas Kaminski (full stack) Matheus Scabia (full stack) Alex Junior (back-end) Part Time Guilherme Roque (front end) Softwares recomendados Fun\u00e7\u00e3o Software recomendado IDE VSCode SSH Tabby Banco de dados DBeaver ou Beekeeper Extens\u00f5es recomendadas (VSCode) Geral Extens\u00e3o Fun\u00e7\u00e3o Code Speel Checker e Brazilian Portuguese Corretor ortogr\u00e1fico que suporta portugu\u00eas brasileiro e typos tanto em pt-br quanto em en-us Color Highlight Dentro do c\u00f3digo, destaca cores em hexadecimal, rgb, rgba, hsl e hsla EditorConfig for VS Code Padroniza a formata\u00e7\u00e3o do c\u00f3digo a partir de um arquivo .editorconfig na raiz do projeto Import Cost Analisa o tamanho dos imports e mostra o custo de cada um indent-rainbow Destaca a indenta\u00e7\u00e3o do c\u00f3digo com cores diferentes Markdown All in One .md toolset Path Intellisense Autocompleta caminhos de arquivos e pastas Todo Tree Mostra todos os TODOs do projeto em uma \u00e1rvore YAML Suporte para YAML Python Extens\u00e3o Fun\u00e7\u00e3o Black Formatter Formata o c\u00f3digo em Python no padr\u00e3o Black Pylance Intellisense para Python Python Suporte para Python Python Indent Melhora a indenta\u00e7\u00e3o do c\u00f3digo Python Flake8 Linter para Python Pylint Linter para Python Python Debug Debug para Python JavaScript Extens\u00e3o Fun\u00e7\u00e3o ESLint Linter para JavaScript Prettier Formata o c\u00f3digo em JavaScript no padr\u00e3o Prettier Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Home"},{"location":"#financial-move-tech-development-docs","text":"Github: https://github.com/FinanciaI-Move/","title":"Financial Move Tech Development Docs"},{"location":"#financial-move","text":"","title":"Financial Move"},{"location":"#links","text":"Documenta\u00e7\u00f5es: Github | ~~Cofluence~~ | Drive botvipfinancial | Postman Clouds: Vercel | AWS | Google Cloud Apps: Board Bot | Tickets BOT | Board APP | Clockfy | Slack","title":"Links"},{"location":"#projetos","text":"Projeto Reposit\u00f3rio Status Bot VIP (normal) e Bot Chefe bot-vip-telegram Ativo Dashboard Bot Chefe dashboard-vip Ativo MySQL com scripts python mysql-database Ativo Redis redis-database Ativo Cryptotraders App cryptotraders-app Ativo Bot VIP (whatsapp) bot-vip-whatsapp Arquivado Room VIP room-vip Arquivado Planilha do milh\u00e3o back-end planilha-do-milhao-backend Ativo Planilha do milh\u00e3o front-end planilha-do-milhao-frontend Ativo","title":"Projetos"},{"location":"#estrutura-cloud","text":"","title":"Estrutura cloud"},{"location":"#vercel","text":"Todos os projetos que s\u00e3o Next ser\u00e3o hospedados na Vercel dashboard-vip","title":"Vercel"},{"location":"#aws","text":"Nossa principal infraestrutura est\u00e1 na AWS, com inst\u00e2ncias EC2 e RDS, al\u00e9m de usar o S3 para armazenamento, Rekognition para reconhecimento de imagem, etc...","title":"AWS"},{"location":"#ec2-us-east-1","text":"QA1 do cryptotraders-app (a ser migrado p\u00f3s delete app_development) test-server (a ser desativado p\u00f3s valida\u00e7\u00e3o carteira bot vip)","title":"EC2 us-east-1"},{"location":"#ec2-sa-east-1","text":"Produ\u00e7\u00e3o do bot-vip-telegram + redis QA1 do bot-vip-telegram Homologa\u00e7\u00e3o da app_development do bot-vip-telegram (a ser desativado p\u00f3s delete app_development)","title":"EC2 sa-east-1"},{"location":"#rds-sa-east-1","text":"Produ\u00e7\u00e3o e QA1 do mysql-database","title":"RDS sa-east-1"},{"location":"#s3-global","text":"Bucket de arquivos do cryptotraders-app Modera\u00e7\u00e3o de imagem do cryptotraders-app","title":"S3 global"},{"location":"#google-cloud","text":"Aqui s\u00f3 usamos para conectar nossos projetos com o Google Workspace, para sincroniza\u00e7\u00e3o de arquivos em planilhas ou no drive.","title":"Google Cloud"},{"location":"#apps","text":"active-report-383515","title":"Apps"},{"location":"#servicos-externos","text":"Em nossos projetos usamos servi\u00e7os externos, ou via API ou via webhook, para fazer integra\u00e7\u00f5es e automatiza\u00e7\u00f5es. API da AWS para utiliza\u00e7\u00e3o dos servi\u00e7os do cryptotraders-app Webhook e API do Telegram para a comunica\u00e7\u00e3o dos bots API e Websocket da Bybit para a comunica\u00e7\u00e3o principal com uma exchange API da Binance como alternativa para quando a Bybit est\u00e1 fora do ar API da Active Campaign para a sincroniza\u00e7\u00e3o dos dados internos com o CRM Webhook e API do Digital Guru para a sincroniza\u00e7\u00e3o dos pagamentos e assinaturas API da OpenAI para a utiliza\u00e7\u00e3o do GPT-3 em nossos projetos GraphQL do Facebook para coleta de dados de ads CoinMarketCap para coleta de dados de mercado","title":"Servi\u00e7os externos"},{"location":"#custos-gerados-pela-nossa-infraestrutura","text":"Servi\u00e7o Custo m\u00e9dio mensal AWS $ 1.500,00 Vercel $ 20,00 x 2 = $40,00 OpenAI $ 5,00 CMC $ 35,00","title":"Custos gerados pela nossa infraestrutura"},{"location":"#sobre-cada-projeto-ativo","text":"Para saber em espec\u00edfico sobre cada projeto, acesse o reposit\u00f3rio correspondente e leia o README.md","title":"Sobre cada projeto ativo"},{"location":"#padroes-de-desenvolvimento","text":"","title":"Padr\u00f5es de desenvolvimento"},{"location":"#lemas","text":"","title":"Lemas"},{"location":"#mantenha-a-simplicidade-e-objetividade","text":"N\u00e3o fa\u00e7a mais do que o necess\u00e1rio, n\u00e3o crie mais do que o necess\u00e1rio, n\u00e3o escreva mais do que o necess\u00e1rio, mas n\u00e3o se esque\u00e7a de fazer o necess\u00e1rio. Nossas entregas tendem a serem simples e objetivas, com valida\u00e7\u00e3o de MVPs e entregas r\u00e1pidas, por\u00e9m, sem esquecer da qualidade.","title":"Mantenha a simplicidade (e objetividade)"},{"location":"#use-o-seu-cerebro","text":"Voc\u00ea tem permiss\u00e3o para pensar, e deve pensar. Se algo n\u00e3o te faz sentido ou parece errado, questione, e se for o caso, proponha uma solu\u00e7\u00e3o. Todos os membros do time tem voz e vez, e com certeza tem algo a contribuir.","title":"Use o seu c\u00e9rebro"},{"location":"#nada-esta-gravado-a-ferro-e-fogo","text":"Nossos processos e padr\u00f5es de desenvolvimento s\u00e3o flex\u00edveis, e podem ser alterados a qualquer momento, desde que tenha ganho para o projeto e/ou time, e que seja validado por todos.","title":"Nada est\u00e1 gravado a ferro e fogo"},{"location":"#aprenda-e-ensine","text":"Ningu\u00e9m sabe tudo, e todos temos algo a aprender e a ensinar. Seja humilde para aprender, e generoso para ensinar.","title":"Aprenda e ensine"},{"location":"#referencias","text":"Parte II - A pr\u00e1tica leva \u00e0 perfei\u00e7\u00e3o, do livro \"How to be a better programmer\" de Pete Goodliffe","title":"Refer\u00eancias"},{"location":"#branchs","text":"main Possui o c\u00f3digo em produ\u00e7\u00e3o, jamais efetuar o commit diretamente nela, somente via PR da develop -> main. develop Possui o c\u00f3digo candidato a producao, commits diretos somente para fix de algo j\u00e1 mergeado mas n\u00e3o no deploy, normalmente recebe PRs de branches de features, bugs, etc... qualquer outra branch Possuem o c\u00f3digo de features, bugs, etc... Sempre criar uma branch a partir da develop e efetuar o PR para a mesma.","title":"Branchs"},{"location":"#time-de-desenvolvimento","text":"","title":"Time de desenvolvimento"},{"location":"#full-time","text":"William Tavares (head) Lucas Kaminski (full stack) Matheus Scabia (full stack) Alex Junior (back-end)","title":"Full Time"},{"location":"#part-time","text":"Guilherme Roque (front end)","title":"Part Time"},{"location":"#softwares-recomendados","text":"Fun\u00e7\u00e3o Software recomendado IDE VSCode SSH Tabby Banco de dados DBeaver ou Beekeeper","title":"Softwares recomendados"},{"location":"#extensoes-recomendadas-vscode","text":"","title":"Extens\u00f5es recomendadas (VSCode)"},{"location":"#geral","text":"Extens\u00e3o Fun\u00e7\u00e3o Code Speel Checker e Brazilian Portuguese Corretor ortogr\u00e1fico que suporta portugu\u00eas brasileiro e typos tanto em pt-br quanto em en-us Color Highlight Dentro do c\u00f3digo, destaca cores em hexadecimal, rgb, rgba, hsl e hsla EditorConfig for VS Code Padroniza a formata\u00e7\u00e3o do c\u00f3digo a partir de um arquivo .editorconfig na raiz do projeto Import Cost Analisa o tamanho dos imports e mostra o custo de cada um indent-rainbow Destaca a indenta\u00e7\u00e3o do c\u00f3digo com cores diferentes Markdown All in One .md toolset Path Intellisense Autocompleta caminhos de arquivos e pastas Todo Tree Mostra todos os TODOs do projeto em uma \u00e1rvore YAML Suporte para YAML","title":"Geral"},{"location":"#python","text":"Extens\u00e3o Fun\u00e7\u00e3o Black Formatter Formata o c\u00f3digo em Python no padr\u00e3o Black Pylance Intellisense para Python Python Suporte para Python Python Indent Melhora a indenta\u00e7\u00e3o do c\u00f3digo Python Flake8 Linter para Python Pylint Linter para Python Python Debug Debug para Python","title":"Python"},{"location":"#javascript","text":"Extens\u00e3o Fun\u00e7\u00e3o ESLint Linter para JavaScript Prettier Formata o c\u00f3digo em JavaScript no padr\u00e3o Prettier","title":"JavaScript"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"k8s/","text":"Documenta\u00e7\u00e3o do Cluster Kubernetes Financial-Move Tech Vis\u00e3o Geral O cluster Kubernetes da financial-move tech est\u00e1 hospedado no Amazon EKS (Elastic Kubernetes Service), que proporciona: Escalabilidade autom\u00e1tica. Gerenciamento simplificado de atualiza\u00e7\u00f5es. Alta disponibilidade. Integra\u00e7\u00e3o nativa com servi\u00e7os AWS, como IAM, CloudWatch e Elastic Load Balancer (ALB). As imagens dos workloads s\u00e3o armazenadas no GitHub Container Registry (GHCR) ghcr financial-move , oferecendo: Integra\u00e7\u00e3o direta com pipelines de CI/CD. Controle de vers\u00e3o de imagens. Alto desempenho no pull de imagens. Estrutura de Rede Endere\u00e7os IP Os endere\u00e7os IP de entrada e sa\u00edda do cluster est\u00e3o associados aos Elastic IPs configurados na AWS: Elastic IPs de Entrada financial-move-cluster-production : Configurados para o ALB gerenciado pelo ingress. Elastic IPs de Sa\u00edda [54.232.71.106]: Associados aos nodes atrav\u00e9s de um NAT Gateway. Para configurar novos IPs: Acesse o console da AWS. Navegue para Elastic IPs em EC2 . Aloque um novo IP e associe ao recurso desejado. Namespaces prod O namespace prod \u00e9 o principal ambiente de produ\u00e7\u00e3o. Configurado em namespaces/prod.yaml : apiVersion: v1 kind: Namespace metadata: name: prod Workloads Servi\u00e7os Existentes task-service Deployment : Definido em deployment.yaml . Horizontal Pod Autoscaler (HPA) : Configurado no hpa.yaml para escalabilidade. Secret : Detalhado no secret.yaml . Service : Configurado em svc.yaml para exposi\u00e7\u00e3o interna e externa. wallet-cryptotraders-service Deployment : Configurado no deployment.yaml . Horizontal Pod Autoscaler (HPA) : Definido no hpa.yaml . Secret : Detalhado em secret.yaml . Service : Configurado em svc.yaml . Workers Cont\u00e9m subdiret\u00f3rios para diferentes tarefas: order-history-worker pnl-worker user-order-worker user-wallet-composition Os secrets compartilhados est\u00e3o no secret.yaml . Adicionando Novos Services ou Workers Criar Namespace (se necess\u00e1rio) : Edite o arquivo do namespace ou crie um novo em namespaces/ . yaml apiVersion: v1 kind: Namespace metadata: name: <namespace-name> Criar Deployment : Defina o deployment em services/<service-name>/deployment.yaml . yaml apiVersion: apps/v1 kind: Deployment metadata: name: <service-name> namespace: <namespace> spec: replicas: 2 template: spec: containers: - name: <container-name> image: ghcr.io/<repository>/<image>:<tag> Configurar HPA : Adicione o arquivo hpa.yaml para escalabilidade. yaml apiVersion: autoscaling/v2 kind: HorizontalPodAutoscaler metadata: name: <hpa-name> spec: maxReplicas: 10 metrics: - type: Resource resource: name: cpu target: averageUtilization: 70 scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: <service-name> Criar Service : Defina o arquivo svc.yaml para roteamento interno ou exposi\u00e7\u00e3o externa. Criar Secrets : Crie ou edite secret.yaml no diret\u00f3rio correspondente. yaml apiVersion: v1 kind: Secret metadata: name: <secret-name> data: key: <base64-encoded-value> Configurar o Ingress : Adicione a rota no ingress-services.yaml . ```yaml pathType: Prefix path: / backend: service: name: port: number: ``` Configura\u00e7\u00e3o de Roteamento do Ingress O Ingress est\u00e1 configurado para utilizar um AWS ALB , com as seguintes rotas: /service \u2192 task-service-svc na porta 8000 . /grafana \u2192 grafana na porta 3000 . / \u2192 wallet-cryptotraders-service-svc na porta 5000 . Exemplo de configura\u00e7\u00e3o: apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: financial-move-ingress namespace: prod annotations: kubernetes.io/ingress.class: alb alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip spec: rules: - http: paths: - pathType: Prefix path: /service backend: service: name: task-service-svc port: number: 8000 ConfigMaps Definidos em configmaps/configmap.yaml . Usados para armazenar configura\u00e7\u00f5es: apiVersion: v1 kind: ConfigMap metadata: name: app-config data: APP_ENV: production DEBUG: \"false\"","title":"Cluster"},{"location":"k8s/#documentacao-do-cluster-kubernetes-financial-move-tech","text":"","title":"Documenta\u00e7\u00e3o do Cluster Kubernetes Financial-Move Tech"},{"location":"k8s/#visao-geral","text":"O cluster Kubernetes da financial-move tech est\u00e1 hospedado no Amazon EKS (Elastic Kubernetes Service), que proporciona: Escalabilidade autom\u00e1tica. Gerenciamento simplificado de atualiza\u00e7\u00f5es. Alta disponibilidade. Integra\u00e7\u00e3o nativa com servi\u00e7os AWS, como IAM, CloudWatch e Elastic Load Balancer (ALB). As imagens dos workloads s\u00e3o armazenadas no GitHub Container Registry (GHCR) ghcr financial-move , oferecendo: Integra\u00e7\u00e3o direta com pipelines de CI/CD. Controle de vers\u00e3o de imagens. Alto desempenho no pull de imagens.","title":"Vis\u00e3o Geral"},{"location":"k8s/#estrutura-de-rede","text":"","title":"Estrutura de Rede"},{"location":"k8s/#enderecos-ip","text":"Os endere\u00e7os IP de entrada e sa\u00edda do cluster est\u00e3o associados aos Elastic IPs configurados na AWS: Elastic IPs de Entrada financial-move-cluster-production : Configurados para o ALB gerenciado pelo ingress. Elastic IPs de Sa\u00edda [54.232.71.106]: Associados aos nodes atrav\u00e9s de um NAT Gateway. Para configurar novos IPs: Acesse o console da AWS. Navegue para Elastic IPs em EC2 . Aloque um novo IP e associe ao recurso desejado.","title":"Endere\u00e7os IP"},{"location":"k8s/#namespaces","text":"","title":"Namespaces"},{"location":"k8s/#prod","text":"O namespace prod \u00e9 o principal ambiente de produ\u00e7\u00e3o. Configurado em namespaces/prod.yaml : apiVersion: v1 kind: Namespace metadata: name: prod","title":"prod"},{"location":"k8s/#workloads","text":"","title":"Workloads"},{"location":"k8s/#servicos-existentes","text":"","title":"Servi\u00e7os Existentes"},{"location":"k8s/#task-service","text":"Deployment : Definido em deployment.yaml . Horizontal Pod Autoscaler (HPA) : Configurado no hpa.yaml para escalabilidade. Secret : Detalhado no secret.yaml . Service : Configurado em svc.yaml para exposi\u00e7\u00e3o interna e externa.","title":"task-service"},{"location":"k8s/#wallet-cryptotraders-service","text":"Deployment : Configurado no deployment.yaml . Horizontal Pod Autoscaler (HPA) : Definido no hpa.yaml . Secret : Detalhado em secret.yaml . Service : Configurado em svc.yaml .","title":"wallet-cryptotraders-service"},{"location":"k8s/#workers","text":"Cont\u00e9m subdiret\u00f3rios para diferentes tarefas: order-history-worker pnl-worker user-order-worker user-wallet-composition Os secrets compartilhados est\u00e3o no secret.yaml .","title":"Workers"},{"location":"k8s/#adicionando-novos-services-ou-workers","text":"Criar Namespace (se necess\u00e1rio) : Edite o arquivo do namespace ou crie um novo em namespaces/ . yaml apiVersion: v1 kind: Namespace metadata: name: <namespace-name> Criar Deployment : Defina o deployment em services/<service-name>/deployment.yaml . yaml apiVersion: apps/v1 kind: Deployment metadata: name: <service-name> namespace: <namespace> spec: replicas: 2 template: spec: containers: - name: <container-name> image: ghcr.io/<repository>/<image>:<tag> Configurar HPA : Adicione o arquivo hpa.yaml para escalabilidade. yaml apiVersion: autoscaling/v2 kind: HorizontalPodAutoscaler metadata: name: <hpa-name> spec: maxReplicas: 10 metrics: - type: Resource resource: name: cpu target: averageUtilization: 70 scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: <service-name> Criar Service : Defina o arquivo svc.yaml para roteamento interno ou exposi\u00e7\u00e3o externa. Criar Secrets : Crie ou edite secret.yaml no diret\u00f3rio correspondente. yaml apiVersion: v1 kind: Secret metadata: name: <secret-name> data: key: <base64-encoded-value> Configurar o Ingress : Adicione a rota no ingress-services.yaml . ```yaml pathType: Prefix path: / backend: service: name: port: number: ```","title":"Adicionando Novos Services ou Workers"},{"location":"k8s/#configuracao-de-roteamento-do-ingress","text":"O Ingress est\u00e1 configurado para utilizar um AWS ALB , com as seguintes rotas: /service \u2192 task-service-svc na porta 8000 . /grafana \u2192 grafana na porta 3000 . / \u2192 wallet-cryptotraders-service-svc na porta 5000 . Exemplo de configura\u00e7\u00e3o: apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: financial-move-ingress namespace: prod annotations: kubernetes.io/ingress.class: alb alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip spec: rules: - http: paths: - pathType: Prefix path: /service backend: service: name: task-service-svc port: number: 8000","title":"Configura\u00e7\u00e3o de Roteamento do Ingress"},{"location":"k8s/#configmaps","text":"Definidos em configmaps/configmap.yaml . Usados para armazenar configura\u00e7\u00f5es: apiVersion: v1 kind: ConfigMap metadata: name: app-config data: APP_ENV: production DEBUG: \"false\"","title":"ConfigMaps"},{"location":"task-service/","text":"Task Service Service (EC2) Service (K8s) Overview The task-service is a FastApi-based microsservice reponsible for managing and executing background tasks on demand. It allows others service or users to offload time-consuming or non-blocking operations, such as data processing, API calls, or notifications, to be performed asynchoronously in the background; This service is optimized for scalability and efficiency, handling tasks without interrupting the main flow of an application or request. It Leverages FastAPI's async capabilities and integrates with background task queues (e.g, Celery or FastAPI's native BackgroundTasks feature) to ensure smooth tasks management. Key Features: Task Submission : Clients can submit tasks via API requests, specifying the type of task and necessary parameters. Task Status Tracking : The service provides endpoints for tracking the status of submitted tasks (e.g., pending, in-progress, completed, failed). Task Management : It supports managing task priorities, cancellation, retries, and scheduling. On-Demand Execution : Tasks are executed in real-time as they are submitted, or can be scheduled for execution at a future time. Asynchronous Processing : Non-blocking task execution ensures that requests are processed efficiently, and the service remains responsive. API Endpoints POST /tasks : Submit a new background task. GET /tasks/{task_id} : Retrieve the status and result of a specific task. DELETE /tasks/{task_id} : Cancel a pending or in-progress task. GET /tasks : List all tasks with filtering options (e.g., by status or date). /scheduler/jobs : List all scheduled tasks and manage scheduling options. Technology Stack: FastAPI for the web framework, enabling fast and efficient API development. Celery or native FastAPI BackgroundTasks for task queue management and execution. Redis or RabbitMQ for message brokering (if using Celery). Use Cases: Processing large data batches. Offloading time-consuming operations (e.g., file uploads, API requests). Executing scheduled jobs like sending notifications or periodic clean-ups.","title":"Services"},{"location":"task-service/#task-service","text":"Service (EC2) Service (K8s)","title":"Task Service"},{"location":"task-service/#overview","text":"The task-service is a FastApi-based microsservice reponsible for managing and executing background tasks on demand. It allows others service or users to offload time-consuming or non-blocking operations, such as data processing, API calls, or notifications, to be performed asynchoronously in the background; This service is optimized for scalability and efficiency, handling tasks without interrupting the main flow of an application or request. It Leverages FastAPI's async capabilities and integrates with background task queues (e.g, Celery or FastAPI's native BackgroundTasks feature) to ensure smooth tasks management. Key Features: Task Submission : Clients can submit tasks via API requests, specifying the type of task and necessary parameters. Task Status Tracking : The service provides endpoints for tracking the status of submitted tasks (e.g., pending, in-progress, completed, failed). Task Management : It supports managing task priorities, cancellation, retries, and scheduling. On-Demand Execution : Tasks are executed in real-time as they are submitted, or can be scheduled for execution at a future time. Asynchronous Processing : Non-blocking task execution ensures that requests are processed efficiently, and the service remains responsive.","title":"Overview"},{"location":"task-service/#api-endpoints","text":"POST /tasks : Submit a new background task. GET /tasks/{task_id} : Retrieve the status and result of a specific task. DELETE /tasks/{task_id} : Cancel a pending or in-progress task. GET /tasks : List all tasks with filtering options (e.g., by status or date). /scheduler/jobs : List all scheduled tasks and manage scheduling options.","title":"API Endpoints"},{"location":"task-service/#technology-stack","text":"FastAPI for the web framework, enabling fast and efficient API development. Celery or native FastAPI BackgroundTasks for task queue management and execution. Redis or RabbitMQ for message brokering (if using Celery). Use Cases: Processing large data batches. Offloading time-consuming operations (e.g., file uploads, API requests). Executing scheduled jobs like sending notifications or periodic clean-ups.","title":"Technology Stack:"},{"location":"webhook/","text":"Vis\u00e3o Geral Este documento descreve o funcionamento do sistema de processamento de webhooks, que centraliza e padroniza a integra\u00e7\u00e3o com diferentes gateways de pagamento e servi\u00e7os externos. O sistema \u00e9 projetado para lidar com eventos de compra, estorno e outras intera\u00e7\u00f5es, oferecendo uma solu\u00e7\u00e3o escal\u00e1vel e padronizada. Estrutura do Sistema Rotas As rotas s\u00e3o respons\u00e1veis por receber e validar os dados dos webhooks, encaminhando-os para a camada de servi\u00e7os para processamento. Cada rota atende a um gateway ou servi\u00e7o espec\u00edfico. Rotas Principais /digital ( payment_gateways.py ): Processa webhooks do gateway Digital Guru. /tmb ( payment_gateways.py ): Processa webhooks do gateway TMB. /curseduca ( curseduca.py ): Processa webhooks do sistema Curseduca. /telegram ( telegram.py ): Processa notifica\u00e7\u00f5es e comandos relacionados a bots no Telegram. Camada de Servi\u00e7os A camada de servi\u00e7os centraliza a l\u00f3gica de processamento dos dados recebidos, garantindo a uniformidade e escalabilidade do sistema. A principal service utilizada \u00e9 a PaymentGatewayService , que abstrai as opera\u00e7\u00f5es comuns entre diferentes gateways. Dados Recebidos pela Service Dados do cliente: first_name , last_name , email , cpf , phone . Dados do produto: product_name , amount , validity_in_months . Status do pagamento: \"Efetivado\" ou \"Cancelado\". Fluxo de Processamento Valida\u00e7\u00e3o de Dados: Os dados recebidos s\u00e3o validados para garantir consist\u00eancia. Opera\u00e7\u00f5es com Usu\u00e1rios: Verifica ou cria o usu\u00e1rio no banco de dados. Opera\u00e7\u00f5es com Produtos: Verifica ou cria o produto no banco de dados. Registro de Transa\u00e7\u00f5es: Cria ou atualiza transa\u00e7\u00f5es no sistema, dependendo do status recebido. Exemplo de Processamento de Webhook A rota recebe um JSON do webhook. Os dados obrigat\u00f3rios, como email e nome do produto, s\u00e3o extra\u00eddos. A rota encaminha esses dados para a PaymentGatewayService . A service processa os dados, interage com o banco de dados e registra as informa\u00e7\u00f5es necess\u00e1rias. A rota retorna uma resposta indicando sucesso ou erro. Detalhes dos Arquivos 1. Arquivo payment_gateways.py Define as rotas principais para integra\u00e7\u00e3o com gateways de pagamento. Rota Digital Guru: Extra\u00ed dados como email , produto e cpf do JSON recebido e os encaminha para a PaymentGatewayService . Rota TMB: Processa os dados de forma similar, adaptada para o formato do gateway TMB. Rota LASTLINK: Processa os dados de forma similar, adaptada para o mesmo formato Rota Hotmart: Processa os dados de forma similiar, e adaptada para o formato semelhante. 2. Arquivo process_all.py Implementa a classe ProcessAllPaymentGateways , que centraliza a l\u00f3gica de processamento. Principais Funcionalidades Verifica ou cria usu\u00e1rios. Verifica ou cria produtos. Registra transa\u00e7\u00f5es de pagamento ou estorno. 3. Arquivo curseduca.py Implementa uma rota para processar webhooks do sistema Curseduca, com foco em valida\u00e7\u00e3o de email e chamada para o servi\u00e7o CurseducaService . 4. Arquivo telegram.py Processa notifica\u00e7\u00f5es e comandos recebidos por bots no Telegram, com integra\u00e7\u00e3o aos servi\u00e7os BotChefeService e BotNormalService . Escalabilidade e Adi\u00e7\u00e3o de Novos Webhooks O sistema \u00e9 projetado para permitir a f\u00e1cil integra\u00e7\u00e3o de novos webhooks. Para adicionar um novo gateway ou servi\u00e7o: Crie uma nova rota no arquivo apropriado. Extraia os dados necess\u00e1rios do JSON recebido. Encaminhe os dados para a PaymentGatewayService ou outro servi\u00e7o relevante. Conclus\u00e3o O sistema de webhooks oferece uma solu\u00e7\u00e3o robusta e padronizada para integra\u00e7\u00e3o com diferentes gateways de pagamento e servi\u00e7os externos. Sua estrutura centralizada facilita a manuten\u00e7\u00e3o e permite escalabilidade para futuras integra\u00e7\u00f5es, garantindo maior organiza\u00e7\u00e3o e efici\u00eancia.","title":"Webhook"},{"location":"webhook/#visao-geral","text":"Este documento descreve o funcionamento do sistema de processamento de webhooks, que centraliza e padroniza a integra\u00e7\u00e3o com diferentes gateways de pagamento e servi\u00e7os externos. O sistema \u00e9 projetado para lidar com eventos de compra, estorno e outras intera\u00e7\u00f5es, oferecendo uma solu\u00e7\u00e3o escal\u00e1vel e padronizada.","title":"Vis\u00e3o Geral"},{"location":"webhook/#estrutura-do-sistema","text":"","title":"Estrutura do Sistema"},{"location":"webhook/#rotas","text":"As rotas s\u00e3o respons\u00e1veis por receber e validar os dados dos webhooks, encaminhando-os para a camada de servi\u00e7os para processamento. Cada rota atende a um gateway ou servi\u00e7o espec\u00edfico.","title":"Rotas"},{"location":"webhook/#rotas-principais","text":"/digital ( payment_gateways.py ): Processa webhooks do gateway Digital Guru. /tmb ( payment_gateways.py ): Processa webhooks do gateway TMB. /curseduca ( curseduca.py ): Processa webhooks do sistema Curseduca. /telegram ( telegram.py ): Processa notifica\u00e7\u00f5es e comandos relacionados a bots no Telegram.","title":"Rotas Principais"},{"location":"webhook/#camada-de-servicos","text":"A camada de servi\u00e7os centraliza a l\u00f3gica de processamento dos dados recebidos, garantindo a uniformidade e escalabilidade do sistema. A principal service utilizada \u00e9 a PaymentGatewayService , que abstrai as opera\u00e7\u00f5es comuns entre diferentes gateways.","title":"Camada de Servi\u00e7os"},{"location":"webhook/#dados-recebidos-pela-service","text":"Dados do cliente: first_name , last_name , email , cpf , phone . Dados do produto: product_name , amount , validity_in_months . Status do pagamento: \"Efetivado\" ou \"Cancelado\".","title":"Dados Recebidos pela Service"},{"location":"webhook/#fluxo-de-processamento","text":"Valida\u00e7\u00e3o de Dados: Os dados recebidos s\u00e3o validados para garantir consist\u00eancia. Opera\u00e7\u00f5es com Usu\u00e1rios: Verifica ou cria o usu\u00e1rio no banco de dados. Opera\u00e7\u00f5es com Produtos: Verifica ou cria o produto no banco de dados. Registro de Transa\u00e7\u00f5es: Cria ou atualiza transa\u00e7\u00f5es no sistema, dependendo do status recebido.","title":"Fluxo de Processamento"},{"location":"webhook/#exemplo-de-processamento-de-webhook","text":"A rota recebe um JSON do webhook. Os dados obrigat\u00f3rios, como email e nome do produto, s\u00e3o extra\u00eddos. A rota encaminha esses dados para a PaymentGatewayService . A service processa os dados, interage com o banco de dados e registra as informa\u00e7\u00f5es necess\u00e1rias. A rota retorna uma resposta indicando sucesso ou erro.","title":"Exemplo de Processamento de Webhook"},{"location":"webhook/#detalhes-dos-arquivos","text":"","title":"Detalhes dos Arquivos"},{"location":"webhook/#1-arquivo-payment_gatewayspy","text":"Define as rotas principais para integra\u00e7\u00e3o com gateways de pagamento. Rota Digital Guru: Extra\u00ed dados como email , produto e cpf do JSON recebido e os encaminha para a PaymentGatewayService . Rota TMB: Processa os dados de forma similar, adaptada para o formato do gateway TMB. Rota LASTLINK: Processa os dados de forma similar, adaptada para o mesmo formato Rota Hotmart: Processa os dados de forma similiar, e adaptada para o formato semelhante.","title":"1. Arquivo payment_gateways.py"},{"location":"webhook/#2-arquivo-process_allpy","text":"Implementa a classe ProcessAllPaymentGateways , que centraliza a l\u00f3gica de processamento.","title":"2. Arquivo process_all.py"},{"location":"webhook/#principais-funcionalidades","text":"Verifica ou cria usu\u00e1rios. Verifica ou cria produtos. Registra transa\u00e7\u00f5es de pagamento ou estorno.","title":"Principais Funcionalidades"},{"location":"webhook/#3-arquivo-curseducapy","text":"Implementa uma rota para processar webhooks do sistema Curseduca, com foco em valida\u00e7\u00e3o de email e chamada para o servi\u00e7o CurseducaService .","title":"3. Arquivo curseduca.py"},{"location":"webhook/#4-arquivo-telegrampy","text":"Processa notifica\u00e7\u00f5es e comandos recebidos por bots no Telegram, com integra\u00e7\u00e3o aos servi\u00e7os BotChefeService e BotNormalService .","title":"4. Arquivo telegram.py"},{"location":"webhook/#escalabilidade-e-adicao-de-novos-webhooks","text":"O sistema \u00e9 projetado para permitir a f\u00e1cil integra\u00e7\u00e3o de novos webhooks. Para adicionar um novo gateway ou servi\u00e7o: Crie uma nova rota no arquivo apropriado. Extraia os dados necess\u00e1rios do JSON recebido. Encaminhe os dados para a PaymentGatewayService ou outro servi\u00e7o relevante.","title":"Escalabilidade e Adi\u00e7\u00e3o de Novos Webhooks"},{"location":"webhook/#conclusao","text":"O sistema de webhooks oferece uma solu\u00e7\u00e3o robusta e padronizada para integra\u00e7\u00e3o com diferentes gateways de pagamento e servi\u00e7os externos. Sua estrutura centralizada facilita a manuten\u00e7\u00e3o e permite escalabilidade para futuras integra\u00e7\u00f5es, garantindo maior organiza\u00e7\u00e3o e efici\u00eancia.","title":"Conclus\u00e3o"}]}